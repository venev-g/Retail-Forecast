# Optimized Training Configuration for Enhanced Retail Forecasting

# Environment configuration with optimized dependencies
settings:
  docker:
    required_integrations:
      - pandas
      - numpy
      - scikit-learn
    requirements:
      - matplotlib>=3.5.0
      - plotly>=5.0.0
      - prophet>=1.1.5
      - pyarrow>=10.0.0
      - fastparquet>=0.8.0
      - typing_extensions>=4.0.0
      - scipy>=1.9.0

# Enhanced model configuration
model:
  name: optimized_retail_forecast_model
  version: 2.0.0
  license: MIT
  description: Advanced retail forecast model with hyperparameter optimization and enhanced features
  tags: ["retail", "forecasting", "prophet", "optimized", "advanced", "hyperparameter-tuning"]

# Step-specific parameters for optimized pipeline
steps:
  # Data loading parameters
  load_data: {}
  
  # Advanced data preprocessing parameters
  preprocess_data_advanced:
    parameters:
      test_size: 0.2
      min_train_size: 50
      outlier_method: "modified_zscore"  # More robust than IQR
      outlier_threshold: 3.5  # Slightly more conservative
      enable_advanced_features: true
  
  # Optimized model training parameters
  train_optimized_model:
    parameters:
      # Hyperparameter optimization settings
      enable_hyperparameter_tuning: true
      max_optimization_evals: 16  # Increased for better optimization
      use_warm_start: true  # Reuse optimal params across series
      
  # Enhanced model evaluation parameters
  evaluate_model:
    parameters:
      calculate_residuals: true
      residual_analysis: true

# Pipeline-level configurations
pipeline:
  # Advanced preprocessing configuration
  outlier_detection:
    method: "modified_zscore"
    threshold: 3.5
    smoothing_enabled: true
  
  # Feature engineering configuration
  features:
    enable_advanced_features: true
    include_price_features: true
    include_seasonal_indicators: true
    include_retail_patterns: true
    include_payday_effects: true
  
  # Hyperparameter optimization configuration
  optimization:
    enabled: true
    max_evaluations: 16
    cross_validation:
      initial_period: "21 days"
      horizon: "7 days"
      period: "3 days"
    parameter_grid:
      changepoint_prior_scale: [0.001, 0.01, 0.05, 0.1, 0.5]
      seasonality_prior_scale: [0.01, 0.1, 1.0, 5.0, 10.0]
      holidays_prior_scale: [0.1, 1.0, 5.0, 10.0, 20.0]
      seasonality_mode: ["additive", "multiplicative"]
    
  # Model configuration optimized for retail data
  prophet_config:
    # Base seasonality settings
    weekly_seasonality: true
    yearly_seasonality: false  # Limited data (90 days)
    daily_seasonality: false
    
    # Growth and bounds
    growth: "linear"
    interval_width: 0.95
    mcmc_samples: 0  # Use MAP for speed
    
    # Custom seasonalities
    custom_seasonalities:
      monthly:
        period: 30.5
        fourier_order: 3
        condition_name: null
      biweekly:
        period: 14
        fourier_order: 2
        condition_name: null
    
    # Regressor configuration
    regressors:
      primary:
        - name: "is_weekend"
          mode: "multiplicative"
          standardize: "auto"
        - name: "is_promo"
          mode: "multiplicative"
          standardize: "auto"
      secondary:
        - name: "is_month_end"
          mode: "multiplicative"
          standardize: "auto"
        - name: "is_month_start"
          mode: "multiplicative"
          standardize: "auto"
        - name: "is_payday"
          mode: "multiplicative"
          standardize: "auto"
      seasonal:
        - name: "is_summer"
          mode: "additive"
          standardize: "auto"
        - name: "is_winter" 
          mode: "additive"
          standardize: "auto"
    
    # Holiday configuration
    holidays:
      include_country_holidays: false  # Using custom holidays from calendar
      prior_scale_adjustment: true
      include_pre_post_effects: true
  
  # Performance and validation settings
  performance:
    target_metrics:
      primary: "rmse"
      secondary: ["mae", "mape"]
    validation:
      method: "time_series_split"
      test_size: 0.2
      min_train_size: 50
    early_stopping:
      enabled: true
      patience: 3
      metric: "rmse"
    
  # Forecasting parameters
  forecasting:
    horizon_days: 60
    confidence_intervals: [0.8, 0.95]
    include_components: true
    uncertainty_estimation: true