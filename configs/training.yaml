# Optimized Training Configuration for Enhanced Retail Forecasting

# Environment configuration with optimized dependencies
settings:
  docker:
    required_integrations:
      - pandas
      - numpy
      - scikit-learn
    requirements:
      - matplotlib>=3.5.0
      - plotly>=5.0.0
      - prophet>=1.1.5
      - pyarrow>=10.0.0
      - fastparquet>=0.8.0
      - typing_extensions>=4.0.0
      - scipy>=1.9.0

# Enhanced model configuration
model:
  name: optimized_retail_forecast_model
  version: 2.0.0
  license: MIT
  description: Advanced retail forecast model with hyperparameter optimization and enhanced features
  tags: ["retail", "forecasting", "prophet", "optimized", "advanced", "hyperparameter-tuning"]

# Pipeline-level parameters that match the training_pipeline function signature
parameters:
  # Data preprocessing parameters (optimized defaults)
  test_size: 0.25
  min_train_size: 50
  outlier_method: "modified_zscore"  # More robust than IQR
  outlier_threshold: 3.5  # Slightly more conservative
  enable_advanced_features: true
  
  # Model optimization parameters
  enable_hyperparameter_tuning: true
  max_optimization_evals: 16  # Increased for better optimization
  use_warm_start: true  # Reuse optimal params across series
  
  # Evaluation parameters
  calculate_residuals: true
  residual_analysis: true

# Step-specific parameters for individual steps (these override step defaults)
steps:
  # Data loading parameters
  load_data: {}
  
  # Advanced data preprocessing parameters
  preprocess_data:
    parameters:
      # These parameters are used by the preprocess_data step
      enable_feature_engineering: true

  # Model training step parameters - comprehensive configuration for Prophet optimization
  train_model:
    parameters:
      # Core Prophet seasonality settings
      weekly_seasonality: true
      yearly_seasonality: false  # Disabled due to insufficient data (90 days)
      daily_seasonality: false   # Not useful for daily retail data
      seasonality_mode: "multiplicative"
      
      # Prophet hyperparameters (fallback/default values for optimization)
      changepoint_prior_scale: 0.05  # Will be optimized if tuning enabled
      seasonality_prior_scale: 1.0   # Will be optimized if tuning enabled
      holidays_prior_scale: 10.0     # Will be optimized if tuning enabled
      growth: "linear"
      
      # Advanced Prophet configuration
      interval_width: 0.95
      mcmc_samples: 0  # Disable MCMC for faster training
      
      # Forecasting constraints
      cap: null  # Will be set dynamically based on data
      floor: 0   # Sales cannot be negative
      use_regressors: true  # Enable weekend, promo, and other regressors
      
      # Hyperparameter optimization grid - values to search through
      hyperparameter_grid:
        changepoint_prior_scale: [0.001, 0.01, 0.05, 0.1, 0.5]
        seasonality_prior_scale: [0.01, 0.1, 1.0, 5.0, 10.0]
        holidays_prior_scale: [0.1, 1.0, 5.0, 10.0, 20.0]
        seasonality_mode: ["additive", "multiplicative"]
      
      # Custom seasonality configuration
      custom_seasonalities:
        monthly:
          period: 30.5
          fourier_order: 3
          enabled: true
          min_data_points: 28  # At least 4 weeks of data required
        biweekly:
          period: 14
          fourier_order: 2
          enabled: true
          min_data_points: 14  # At least 2 weeks of data required
      
      # Regressor configuration
      regressors:
        primary:
          - is_weekend
          - is_promo
          - is_month_end
          - is_month_start
        advanced:
          - is_payday
          - is_quarter_end
          - is_summer
          - is_winter
        special:
          - price_change  # Uses multiplicative mode regardless of seasonality_mode
      
      # Cross-validation and optimization settings
      cv_settings:
        horizon: "7 days"
        initial: "21 days"
        period: "3 days"
        min_data_for_cv: 40  # Minimum data points required for cross-validation
        train_test_split_ratio: 0.8  # For simple split when insufficient data for CV
      
      # Random seed for reproducible hyperparameter selection
      random_seed: 42
      
      # Data validation thresholds
      min_training_points: 10  # Minimum data points required to train a model

  # Enhanced model evaluation parameters
  evaluate_models:
    parameters:
      metrics: ["mae", "rmse", "mape", "smape"]

  # Forecasting parameters
  generate_forecasts:
    parameters:
      forecast_periods: 60 
